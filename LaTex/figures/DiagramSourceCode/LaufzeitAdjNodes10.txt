import matplotlib.pyplot as plt

# Testf√§lle von 1 bis 10
testfall = list(range(1, 11))

# Laufzeit (Sekunden)
laufzeit = [41.6429, 128.4196, 31.2159, 45.4415, 33.0605, 145.9963, 231.6784, 136.9107, 39.9753, 30.6745]

# Anzahl gleicher adjazenter Knoten
adjazente_knoten = [0, 2, 1, 1, 2, 1, 1, 1, 3, 3]

# Erstelle das Diagramm mit zwei Achsen
fig, ax1 = plt.subplots(figsize=(10, 6))

# Linke Y-Achse: Laufzeit
ax1.set_xlabel('Testfall')
ax1.set_ylabel('Laufzeit (Sekunden)', color='royalblue')
ax1.plot(testfall, laufzeit, marker='o', linestyle='-', color='royalblue', label='Laufzeit')
ax1.tick_params(axis='y', labelcolor='royalblue')

# Rechte Y-Achse: Anzahl gleicher adjazenter Knoten
ax2 = ax1.twinx()
ax2.set_ylabel('Anzahl gleicher adjazenter Knoten', color='forestgreen')
ax2.plot(testfall, adjazente_knoten, marker='s', linestyle='--', color='forestgreen', label='Adjazente Knoten')
ax2.tick_params(axis='y', labelcolor='forestgreen')
ax2.set_yticks([0, 1, 2, 3])

# Titel und Layout
plt.title('Laufzeit & Anzahl gleicher adjazenter Knoten pro Testfall', fontsize=14)
plt.grid(True)
fig.tight_layout()

# Diagramm speichern und anzeigen
plt.show()
